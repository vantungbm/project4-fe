name: cd-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install the dependencies.
      - run: npm ci
        # Run the test.
      - run: npm test
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      # Send a console message at completion.
      - run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1 # Replace with your desired AWS region
      - name: Login-ecr
        run: |
          echo Logging into ECR
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
      - name: Build image
        run: |
          echo Starting build at $(date)
          echo Building the Docker image...          
          docker build -t pj4-tungnv30:0.1.1 .
          docker tag pj4-tungnv30:0.1.1 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/pj4-tungnv30:0.1.1      
      - name: Post build
        run: |
          echo Completed build at $(date)
          echo Pushing the Docker image...
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/pj4-tungnv30:0.1.1
