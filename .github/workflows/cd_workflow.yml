name: cd-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install the dependencies.
      - run: npm ci
        # Run the test.
      - run: npm test
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3
      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install the dependencies.
      - run: npm ci
      # Send a console message at completion.
      - run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
          output-credentials: true
      - name: Test login AWS
        run: aws ec2 describe-instances --region us-west-1
      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Build Docker image
        run: |
          docker build -t frontend --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} .
      
      - name: Tag Docker Image
        run: |
          docker tag frontend:latest ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

      - name: Kubeconfig Login
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ vars.AWS_DEFAULT_REGION }}
      
      - name: Deploy to Kubernetes
        run: |
          cd k8s && kustomize edit set image frontend=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest && kustomize build | kubectl apply -f -
